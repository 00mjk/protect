# This file contains a list of clients and their permissions for what operations they can perform on which secrets
#
# Each entry in this file is of the following form:
# <client-id>.<secret-name> = <generate/store/read/info/delete/recover/disable/enable/read/exponentiate>

# Client ID: a numerical identifier for a public key stored in the client "keys" directory with the name "public-<client-id>"
# Secret: A string containing the name of the secret upon which permissions can be granted
# Permissions: A comma-separated list of permissions, supported permissions include:
#   - generate:     The ability to execute a DKG using this name to establish a secret (if one does not already exist with this name)
#   - store:        The ability for a client to directly store shares of a secret to this key name (if one does not already exist with this name)
#   - read:         The ability to recover a secret from its shares (should only be used for secrets that can be stored)
#   - info:         The ability to request information about this key, including the name, creation time, epoch, last-refresh time, prime field and group information (RSA/DH/EC)
#   - delete:       The ability to destroy the shares associated with this key, resetting its state and allowing a new key of this name to be created or stored.
#   - recover       The ability to initiate a share recovery for shares of this key after one the shares becomes lost or deleted.
#   - disable:      The ability to temporarily disable client actions from being performed against the shares of this key (note: does not prevent delete/enable/info)
#   - enable:       The ability to re-enable client actions from being performed against shares of this key
#   - exponentiate: The ability to compute an exponentiation (scalar multiply for EC curves) on a client-supplied base point: base^secret
#   - sign:         The ability to perform an signature operation on a client-supplied message: message^(secret=d) mod N.  Secrets of this form must be stored and be under RSA or BLS groups.
 
# Administrator (creates, deletes, enables secrets)
1.prf-secret	= generate,delete,disable,enable,info,exponentiate,read,store,recover
1.my-secret		= generate,delete,disable,enable,info
#1.rsa-secret	= delete,disable,enable,info

# Security Officer (disables secret when there is a suspected problem)
2.prf-secret	= disable,info
2.my-secret		= disable,info
#2.rsa-secret	= disable,info

# (O)PRF User (can compute prf or oprf operations)
3.prf-secret	= exponentiate,info

# Storage User (can store, read, and delete secrets)
4.my-secret		= store,read,delete,info

# Signature User (can compute RSA signatures)
#5.rsa-secret	= store,rsa_sign,info
