# This file contains a list of clients and their permissions for what operations they can perform on which secrets
#
# Each entry in this file is of the following form:
# <client-id>  <secret-name>  <create/store/info/delete/disable/enable/restore/exponentiate>

# Client ID: a numerical identifier for a public key stored in the client "keys" directory with the name "public-<client-id>"
# Secret: A string containing the name of the secret upon which permissions can be granted
# Permissions: A comma-separated list of permissions, supported permissions include:
#   - create:       The ability to execute a DKG using this name to establish a secret (if one does not already exist with this name)
#   - read:         The ability for a client to directly store shares of a secret to this key name (if one does not already exist with this name)
#   - info:         The ability to request information about this key, including the name, creation time, epoch, last-refresh time, prime field and group information (RSA/DH/EC)
#   - delete:       The ability to destroy the shares associated with this key, resetting its state and allowing a new key of this name to be created or stored.
#   - disable:      The ability to temporarily disable client actions from being performed against the shares of this key (note: does not prevent delete/enable/info)
#   - enable:       The ability to re-enable client actions from being performed against shares of this key
#   - restore:      The ability to recover a secret from its shares (should only be used for secrets that can be stored)
#   - exponentiate: The ability to compute an exponentiation (scalar multiply for EC curves) on a client-supplied base point: base^secret
#   - rsa-sign:     The ability to perform an RSA signature operation on a client-supplied message: message^(secret=d) mod N.  Secrets of this form must be stored.

# Administrator - can enable or disable secrets
1	prf-secret	create,delete,disable,enable,info
1	my-secret	delete,disable,enable,info
1   rsa-secret	delete,disable,enable,info

# Security Officer - can disable a secret when there is a problem
2	prf-secret	disable,info
2	my-secret	disable,info
2	rsa-secret	disable,info

# (O)PRF User
3	prf-secret	exponentiate,info

# Storage User
4	my-secret	store,read,delete,info

# Signature User
5	rsa-secret	store,rsa-sign,info

# JSON
#{
#   "1": {
#      "prf-secret": {  ["create", "delete"] },
#      "my-secret": {  ["create", "delete"] }
#   },
#
#   "2": {
#      "prf-secret": {  ["create", "delete"] },
#      "my-secret": {  ["create", "delete"] }
#   }
}